{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 6,
    "pending": 0,
    "failures": 1,
    "start": "2022-05-09T06:42:49.546Z",
    "end": "2022-05-09T06:43:28.420Z",
    "duration": 38874,
    "testsRegistered": 7,
    "passPercent": 85.71428571428571,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3e5b7115-e12c-45c6-9a65-237fe3fbe13d",
      "title": "",
      "fullFile": "cypress/integration/features/ui/fleet-admin/signup-scenarios.feature",
      "file": "cypress/integration/features/ui/fleet-admin/signup-scenarios.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1cb88180-6267-4d32-8a76-4f82f156bf1a",
          "title": "Fleet-Admin signup related test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "validating error message for invalid email on Sign-up page (example #1)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #1)",
              "timedOut": null,
              "duration": 3684,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5f0cc9ef-7697-4c88-9478-cfe6d7b42113",
              "parentUUID": "1cb88180-6267-4d32-8a76-4f82f156bf1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #2)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #2)",
              "timedOut": null,
              "duration": 1035,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "41449e6d-ea90-46b8-882b-038c96cf6d19",
              "parentUUID": "1cb88180-6267-4d32-8a76-4f82f156bf1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #3)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #3)",
              "timedOut": null,
              "duration": 855,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "71c738fc-5384-4d30-a2bd-e018c2a48146",
              "parentUUID": "1cb88180-6267-4d32-8a76-4f82f156bf1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #4)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #4)",
              "timedOut": null,
              "duration": 943,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9a35d0fd-73df-4c60-bf6e-f82d0139d3de",
              "parentUUID": "1cb88180-6267-4d32-8a76-4f82f156bf1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #5)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #5)",
              "timedOut": null,
              "duration": 1253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e4f10e4c-6c2b-4d2d-888b-0b2c6fd9a0e4",
              "parentUUID": "1cb88180-6267-4d32-8a76-4f82f156bf1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for invalid email on Sign-up page (example #6)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for invalid email on Sign-up page (example #6)",
              "timedOut": null,
              "duration": 912,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5b642a97-2d97-423c-acb4-7dda2c3e80a5",
              "parentUUID": "1cb88180-6267-4d32-8a76-4f82f156bf1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validating error message for registred email (example #1)",
              "fullTitle": "Fleet-Admin signup related test cases validating error message for registred email (example #1)",
              "timedOut": null,
              "duration": 26069,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\features\\\\ui\\\\fleet-admin\\\\signup-scenarios.feature\\\\Fleet-Admin signup related test cases -- validating error message for registred email (example #1) (failed).png\"\n      }\n    ]\n  ]\n}",
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Email is already not in use' but never did.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find content: 'Email is already not in use' but never did.\n    at registrationPage.registeredEmailErrorVerification (https://qa-operator.bussr.app/__cypress/tests?p=cypress\\integration\\features\\ui\\fleet-admin\\signup-scenarios.feature:3990:30)\n    at Context.eval (https://qa-operator.bussr.app/__cypress/tests?p=cypress\\integration\\features\\ui\\fleet-admin\\signup-scenarios.feature:1012:33)\n    at Context.resolveAndRunStepDefinition (https://qa-operator.bussr.app/__cypress/tests?p=cypress\\integration\\features\\ui\\fleet-admin\\signup-scenarios.feature:24976:29)\n    at Context.eval (https://qa-operator.bussr.app/__cypress/tests?p=cypress\\integration\\features\\ui\\fleet-admin\\signup-scenarios.feature:24297:35)",
                "diff": null
              },
              "uuid": "69dc5ee9-b605-4006-890c-c7407cb11902",
              "parentUUID": "1cb88180-6267-4d32-8a76-4f82f156bf1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f0cc9ef-7697-4c88-9478-cfe6d7b42113",
            "41449e6d-ea90-46b8-882b-038c96cf6d19",
            "71c738fc-5384-4d30-a2bd-e018c2a48146",
            "9a35d0fd-73df-4c60-bf6e-f82d0139d3de",
            "e4f10e4c-6c2b-4d2d-888b-0b2c6fd9a0e4",
            "5b642a97-2d97-423c-acb4-7dda2c3e80a5"
          ],
          "failures": [
            "69dc5ee9-b605-4006-890c-c7407cb11902"
          ],
          "pending": [],
          "skipped": [],
          "duration": 34751,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\report\\.jsons",
        "charts": true,
        "embeddedScreenshots": true,
        "overwrite": false,
        "json": true,
        "html": false
      },
      "version": "6.2.0"
    }
  }
}